}
else {
print(tail(log_data, N))
}
}
search_log <- function(game_pk) {
log_data <- range_speedread(ss_name, sheet='log')
print(log_data[grep(game_pk, log_data$message), ])
}
# Update
update_game <- function(game_data_file, signature, pt_data_fully_tracked=FALSE, pt_data_partially_tracked=FALSE) {
game_data <- read_csv(game_data_file)
game_pk <- unique(game_data$game_pk)
delete_game(game_pk, signature)
add_game(game_data_file, signature, pt_data_fully_tracked=pt_data_fully_tracked, pt_data_partially_tracked=pt_data_fully_tracked)
}
# Delete
delete_game <- function(game_pk, signature) {
game_db <- range_speedread(ss_name, sheet='game_data')
is_game_pk <- function(x) {
return(x == game_pk)
}
only_game_pk <- game_db %>%
filter(game_pk == game_pk)
start_index <- detect_index(game_db$game_pk, is_game_pk)
if (!is.null(start_index)) {
log_message <- paste0('Game ', game_pk, ' deleted.')
log_data <- data.frame(date=c(Sys.Date()),
messgae=c(log_message),
signature=c(signature))
end_index <- start_index + (nrow(only_game_pk) - 1)
delete_range <- paste0(start_index, ':', end_index)
range_delete(ss_name, range=delete_range)
sheet_append(ss_name, log_data, sheet='log')
print(log_message)
}
else {
print('ERROR - Game cannot be found in database.')
}
}
create_database('manual_csv_160823BRABAR.csv', 'jack', FALSE, TRUE)
add_game('manual_csv_180823BARLON.csv', 'jack', FALSE, FALSE)
view_game_pks('2023-08-18')
view_game_pks <- function(search_game_date) {
game_data <- range_speedread(ss_name, sheet='game_data')
only_game_date <- game_data %>%
filter(game_date == search_game_date)
print(unique(only_game_date$game_pk))
view_game_pks <- function(search_game_date) {
game_data <- range_speedread(ss_name, sheet='game_data')
only_game_date <- game_data %>%
filter(game_date == search_game_date)
print(unique(only_game_date$game_pk))
}
view_game_pks('2023-08-18')
view_game_pks <- function(search_game_date) {
game_data <- range_speedread(ss_name, sheet='game_data')
only_game_date <- game_data %>%
filter(game_date == search_game_date)
print(unique(only_game_date$game_pk))
}
view_game_pks('2023-08-18')
delete_game("20230818BARLON1", 'jack')
view_log_last_N(14)
search_log('2023-08-18')
search_log('2023-08-16')
search_log <- function(game_pk) {
log_data <- range_speedread(ss_name, sheet='log')
print(head(log_data[grep(game_pk, log_data$message), ]))
}
search_log('2023-08-16')
search_log <- function(game_pk) {
log_data <- range_speedread(ss_name, sheet='log')
print(log_data[grep(game_pk, log_data$message), ])
}
search_log('20230816BARLON1')
search_log('20230818BARLON1')
search_log('20230816BRABAR1')
update_game('manual_csv_160823BRABAR.csv', 'jack', FALSE, FALSE)
create_database('manual_csv_160823BRABAR.csv', 'jack', FALSE, TRUE)
add_game('manual_csv_180823BARLON.csv', 'jack', FALSE, FALSE)
update_game('manual_csv_180823BARLON.csv', 'jack', FALSE, FALSE)
add_game('manual_csv_180823BARLON.csv', 'jack', FALSE, FALSE)
update_game <- function(game_data_file, signature, pt_data_fully_tracked=FALSE, pt_data_partially_tracked=FALSE) {
game_data <- read_csv(game_data_file)
game_pk <- unique(game_data$game_pk)
delete_game(game_pk, signature)
add_game(game_data_file, signature, pt_data_fully_tracked=pt_data_fully_tracked, pt_data_partially_tracked=pt_data_partially_tracked)
}
add_game('manual_csv_180823BARLON.csv', 'jack', FALSE, FALSE)
create_database('manual_csv_160823BRABAR.csv', 'jack', FALSE, TRUE)
add_game('manual_csv_180823BARLON.csv', 'jack', FALSE, FALSE)
BRABAR <- read_csv('manual_csv_160823BRABAR.csv')
BARLON <- read_csv('manual_csv_180823BARLON.csv')
colnames(BRABAR)
colnames(BARLON)
colnames(BARLON) == colnames(BRABAR)
create_database('manual_csv_160823BRABAR.csv', 'jack', FALSE, TRUE)
library(tidyverse)
library(ggplot2)
library(googlesheets4)
ss_name <- 'https://docs.google.com/spreadsheets/d/1LzMRCs2kW3MALMj69c1mOhLUcUH7jYLCRDnpoydqDIU/edit#gid=0'
# data <- range_speedread(sheet_name)
# new_data <- read_csv('manual_csv_180823BARLON.csv')
# sheet_append(sheet_name, data=new_data)
# BRABAR <- read_csv('manual_csv_160823BRABAR.csv')
# BARLON <- read_csv('manual_csv_180823BARLON.csv')
# Create
create_database <- function(game_data_file, signature, pt_data_fully_tracked=FALSE, pt_data_partially_tracked=FALSE) {
if (!((pt_data_fully_tracked == TRUE) & (pt_data_partially_tracked == TRUE))) {
game_data <- read_csv(game_data_file)
game_pk <- unique(game_data$game_pk)
log_db_created_message <- 'Database created.'
if (pt_data_fully_tracked == TRUE) {
log_message <- paste0('Game ', game_pk, ' added. Pitch tracking data fully logged.')
}
else if (pt_data_partially_tracked == TRUE) {
log_message <- paste0('Game ', game_pk, ' added. Pitch tracking data partially logged.')
}
else {
log_message <- paste0('Game ', game_pk, ' added.')
}
log_data <- data.frame(date_added=c(Sys.Date(), Sys.Date()),
message=c(log_db_created_message, log_message),
signature=c(signature, signature))
sheet_write(data=game_data, ss=ss_name, sheet='game_data')
sheet_write(data=log_data, ss=ss_name, sheet='log')
print(log_db_created_message)
print(log_message)
}
else {
print('ERROR - Fully tracked and partially tracked flags cannot both be true.')
}
}
add_game <- function(game_data_file, signature, pt_data_fully_tracked=FALSE, pt_data_partially_tracked=FALSE) {
if (!((pt_data_fully_tracked == TRUE) & (pt_data_partially_tracked == TRUE))) {
game_db <- range_speedread(ss_name, sheet='game_data')
game_data <- read_csv(game_data_file)
new_game_pk <- unique(game_data$game_pk)
only_new_game_pk <- game_db %>%
filter(game_pk == new_game_pk)
if (nrow(only_new_game_pk) == 0) {
if(pt_data_fully_tracked == TRUE) {
log_message <- paste0('Game ', new_game_pk, ' added. Pitch tracking data fully logged.')
}
else if (pt_data_partially_tracked == TRUE) {
log_message <- paste0('Game ', new_game_pk, ' added. Pitch tracking data partially logged.')
}
else {
log_message <- paste0('Game ', new_game_pk, ' added.')
}
log_data <- data.frame(date_added=c(Sys.Date()),
message=c(log_message),
signature=c(signature))
sheet_append(ss_name, game_data, sheet='game_data')
sheet_append(ss_name, log_data, sheet='log')
print(log_message)
}
else {
print('ERROR - Game is already found in database.')
}
}
else {
print('ERROR - Fully tracked and partially tracked flags cannot both be true.')
}
}
# Read
read_game_data <- function() {
game_data <- range_speedread(ss_name, sheet='game_data')
return(game_data)
}
view_game_pks <- function(search_game_date) {
game_data <- range_speedread(ss_name, sheet='game_data')
only_game_date <- game_data %>%
filter(game_date == search_game_date)
print(unique(only_game_date$game_pk))
}
view_log_last_N <- function(N) {
log_data <- range_speedread(ss_name, sheet='log')
if (N > 15) {
print(tail(log_data, 15))
}
else {
print(tail(log_data, N))
}
}
search_log <- function(game_pk) {
log_data <- range_speedread(ss_name, sheet='log')
print(log_data[grep(game_pk, log_data$message), ])
}
# Update
update_game <- function(game_data_file, signature, pt_data_fully_tracked=FALSE, pt_data_partially_tracked=FALSE) {
game_data <- read_csv(game_data_file)
game_pk <- unique(game_data$game_pk)
delete_game(game_pk, signature)
add_game(game_data_file, signature, pt_data_fully_tracked=pt_data_fully_tracked, pt_data_partially_tracked=pt_data_partially_tracked)
}
# Delete
delete_game <- function(del_game_pk, signature) {
game_db <- range_speedread(ss_name, sheet='game_data')
is_game_pk <- function(x) {
return(x == del_game_pk)
}
only_del_game_pk <- game_db %>%
filter(game_pk == del_game_pk)
start_index <- detect_index(game_db$game_pk, is_game_pk)
if (!is.null(start_index)) {
log_message <- paste0('Game ', del_game_pk, ' deleted.')
log_data <- data.frame(date=c(Sys.Date()),
messgae=c(log_message),
signature=c(signature))
if (start_index == 1) {
delete_range <- paste0(2, ':', (nrow(only_del_game_pk) + 1))
}
else {
end_index <- start_index + nrow(only_del_game_pk)
delete_range <- paste0(start_index, ':', end_index)
if (game_db[nrow(game_db), 'game_pk'] == del_game_pk) {
range_flood(ss_name, sheet='game_data', reformat=TRUE)
}
else {
range_delete(ss_name, range=delete_range)
}
}
sheet_append(ss_name, log_data, sheet='log')
print(log_message)
}
else {
print('ERROR - Game cannot be found in database.')
}
}
add_game('manual_csv_180823BARLON.csv', 'Jack', FALSE, FALSE)
# Delete
delete_game <- function(del_game_pk, signature) {
game_db <- range_speedread(ss_name, sheet='game_data')
is_game_pk <- function(x) {
return(x == del_game_pk)
}
only_del_game_pk <- game_db %>%
filter(game_pk == del_game_pk)
start_index <- detect_index(game_db$game_pk, is_game_pk)
if (!is.null(start_index)) {
log_message <- paste0('Game ', del_game_pk, ' deleted.')
log_data <- data.frame(date=c(Sys.Date()),
messgae=c(log_message),
signature=c(signature))
if (start_index == 1) {
delete_range <- paste0(2, ':', (nrow(only_del_game_pk) + 1))
}
else {
end_index <- start_index + nrow(only_del_game_pk)
delete_range <- paste0(start_index, ':', end_index)
if (game_db[nrow(game_db), 'game_pk'] == del_game_pk) {
range_flood(ss_name, sheet='game_data', range=delete_range, reformat=TRUE)
}
else {
range_delete(ss_name, range=delete_range)
}
}
sheet_append(ss_name, log_data, sheet='log')
print(log_message)
}
else {
print('ERROR - Game cannot be found in database.')
}
}
update_game('manual_csv_180823BARLON.csv', 'Jack', FALSE, FALSE)
view_log_last_N <- function(N=15) {
log_data <- range_speedread(ss_name, sheet='log')
if (N > 15) {
print(tail(log_data, 15))
}
else {
print(tail(log_data, N))
}
}
view_log_last_N()
view_game_pks('2023-08-18')
view_game_pks('2023-08-16')
view_game_pks('2023-08-17')
search_log("20230818BARLON1")
search_log("20230818BARHAM")
paste0('test', '')
paste0('test', ' ')
paste0('test', '')
library(tidyverse)
data <- read_csv('savant_pitch_level.csv')
filtered_data <- data %>%
filter(events %in% c('fielders_choice', 'fielders_choice_out', 'force_out')) %>%
select(events, des, outs_when_up, on_3b, on_2b, on_1b)
View(filtered_data)
library(shiny); runApp('baycats/baycats_example_strikezone.R')
runApp('baycats/baycats_example_strikezone.R')
library(tidyverse)
library(ggplot2)
library(googlesheets4)
setwd("~/baycats")
ss_name <- 'https://docs.google.com/spreadsheets/d/1LzMRCs2kW3MALMj69c1mOhLUcUH7jYLCRDnpoydqDIU/edit#gid=0'
# data <- range_speedread(sheet_name)
# new_data <- read_csv('manual_csv_180823BARLON.csv')
# sheet_append(sheet_name, data=new_data)
# BRABAR <- read_csv('manual_csv_160823BRABAR.csv')
# BARLON <- read_csv('manual_csv_180823BARLON.csv')
# Create
create_database <- function(game_id, signature, pt_data_fully_tracked=FALSE, pt_data_partially_tracked=FALSE, custom_message='') {
if (!((pt_data_fully_tracked == TRUE) & (pt_data_partially_tracked == TRUE))) {
if ((pt_data_fully_tracked == TRUE) | (pt_data_partially_tracked == TRUE)) {
game_data_file <- paste0('~/baycats/pitches_tracked_game_data/', game_id, '_pt.csv')
}
else {
game_data_file <- paste0('~/baycats/raw_game_data/', game_id, '.csv')
}
game_data <- read_csv(game_data_file)
game_id <- unique(game_data$game_pk)
log_db_created_message <- 'Database created.'
if (pt_data_fully_tracked == TRUE) {
if (custom_message != '') {
log_message <- paste0('Game ', game_id, ' added. Pitch data fully tracked. ', custom_message)
}
else {
log_message <- paste0('Game ', game_id, ' added. Pitch data fully tracked.')
}
}
else if (pt_data_partially_tracked == TRUE) {
if (custom_message != '') {
log_message <- paste0('Game ', game_id, ' added. Pitch data partially tracked. ', custom_message)
}
else {
log_message <- paste0('Game ', game_id, ' added. Pitch data partially tracked.')
}
}
else {
if (custom_message != '') {
log_message <- paste0('Game ', game_id, ' added. ', custom_message)
}
else {
log_message <- paste0('Game ', game_id, ' added.')
}
}
log_data <- data.frame(date_added=c(Sys.Date(), Sys.Date()),
message=c(log_db_created_message, log_message),
signature=c(signature, signature))
sheet_write(data=game_data, ss=ss_name, sheet='game_data')
sheet_write(data=log_data, ss=ss_name, sheet='log')
print(log_db_created_message)
print(log_message)
}
else {
print('ERROR - Fully tracked and partially tracked flags cannot both be true.')
}
}
add_game <- function(game_id, signature, pt_data_fully_tracked=FALSE, pt_data_partially_tracked=FALSE, custom_message='') {
if (!((pt_data_fully_tracked == TRUE) & (pt_data_partially_tracked == TRUE))) {
game_db <- range_speedread(ss_name, sheet='game_data')
if ((pt_data_fully_tracked == TRUE) | (pt_data_partially_tracked == TRUE)) {
game_data_file <- paste0('~/baycats/pitches_tracked_game_data/', game_id, '_pt.csv')
}
else {
game_data_file <- paste0('~/baycats/raw_game_data/', game_id, '.csv')
}
game_data <- read_csv(game_data_file)
game_id <- unique(game_data$game_pk)
only_game_id <- game_db %>%
filter(game_pk == game_id)
if (nrow(only_game_id) == 0) {
if(pt_data_fully_tracked == TRUE) {
if (custom_message != '') {
log_message <- paste0('Game ', game_id, ' added. Pitch data fully tracked. ', custom_message)
}
else {
log_message <- paste0('Game ', game_id, ' added. Pitch data fully tracked.')
}
}
else if (pt_data_partially_tracked == TRUE) {
if (custom_message != '') {
log_message <- paste0('Game ', game_id, ' added. Pitch data partially tracked. ', custom_message)
}
else {
log_message <- paste0('Game ', game_id, ' added. Pitch data partially tracked.')
}
}
else {
if (custom_message != '') {
log_message <- paste0('Game ', game_id, ' added. ', custom_message)
}
else {
log_message <- paste0('Game ', game_id, ' added.')
}
}
log_data <- data.frame(date_added=c(Sys.Date()),
message=c(log_message),
signature=c(signature))
sheet_append(ss_name, game_data, sheet='game_data')
sheet_append(ss_name, log_data, sheet='log')
print(log_message)
}
else {
print('ERROR - Game is already found in database.')
}
}
else {
print('ERROR - Fully tracked and partially tracked flags cannot both be true.')
}
}
write_began_pt_logging <- function(game_id, signature, custom_message='') {
if (custom_message != '') {
log_message <- paste0('Game ', game_id, ' has been started for pitch tracking. ', custom_message)
}
else {
log_message <- paste0('Game ', game_id, ' has been started for pitch tracking.')
}
log_data <- data.frame(date_added=c(Sys.Date()),
message=c(log_message),
signature=c(signature))
sheet_append(ss_name, log_data, sheet='log')
print(log_message)
}
# Read
read_game_data <- function() {
game_data <- range_speedread(ss_name, sheet='game_data')
return(game_data)
}
save_game_data <- function(game_id, pt_data_fully_tracked=FALSE, pt_data_partially_tracked=FALSE) {
game_db <- range_speedread(ss_name, sheet='game_data')
game_data <- game_db %>%
filter(game_pk == game_id)
if (nrow(game_data) != 0) {
if ((pt_data_fully_tracked == TRUE) | (pt_data_partially_tracked == TRUE)) {
write_csv(game_data, paste0('~/baycats/pitches_tracked_game_data/', game_id, '_pt.csv'))
log_message <- paste0('Game ', game_id, 'saved to ~/baycats/pitches_tracked_game_data.')
}
else {
write_csv(game_data, paste0('~/baycats/raw_game_data/', game_id, '.csv'))
log_message <- paste0('Game ', game_id, 'saved to ~/baycats/raw_game_data.')
}
print(log_message)
}
else {
print('ERROR - Game cannot be found in database.')
}
}
view_game_pks <- function(search_game_date) {
game_data <- range_speedread(ss_name, sheet='game_data')
only_game_date <- game_data %>%
filter(game_date == search_game_date)
print(unique(only_game_date$game_pk))
}
view_log_last_N <- function(N=15) {
log_data <- range_speedread(ss_name, sheet='log')
if (N > 15) {
print(tail(log_data, 15))
}
else {
print(tail(log_data, N))
}
}
search_log <- function(game_pk) {
log_data <- range_speedread(ss_name, sheet='log')
print(log_data[grep(game_pk, log_data$message), ])
}
# Update
update_game <- function(game_id, signature, pt_data_fully_tracked=FALSE, pt_data_partially_tracked=FALSE, custom_message='') {
delete_game(game_id, signature, custom_message)
add_game(game_id, signature, pt_data_fully_tracked=pt_data_fully_tracked, pt_data_partially_tracked=pt_data_partially_tracked, custom_message)
}
# Delete
delete_game <- function(game_id, signature, custom_message='') {
game_db <- range_speedread(ss_name, sheet='game_data')
is_game_id <- function(x) {
return(x == game_id)
}
only_game_id <- game_db %>%
filter(game_pk == game_id)
start_index <- detect_index(game_db$game_pk, is_game_id)
if (start_index != 0) {
if (custom_message != '') {
log_message <- paste0('Game ', game_id, ' deleted. ', custom_message)
}
else {
log_message <- paste0('Game ', game_id, ' deleted.')
}
log_data <- data.frame(date=c(Sys.Date()),
messgae=c(log_message),
signature=c(signature))
if (start_index == 1) {
delete_range <- paste0(2, ':', (nrow(only_game_id) + 1))
}
else {
end_index <- start_index + nrow(only_game_id)
delete_range <- paste0((start_index + 1), ':', end_index)
}
if (game_db[nrow(game_db), 'game_pk'] == game_id) {
range_flood(ss_name, sheet='game_data', range=delete_range, reformat=TRUE)
}
else {
range_delete(ss_name, range=delete_range)
}
sheet_append(ss_name, log_data, sheet='log')
print(log_message)
}
else {
print('ERROR - Game cannot be found in database.')
}
}
add_game('manual_20230818BARLON1.csv', 'Jack')
add_game('manual_20230818BARLON1', 'Jack')
view_game_pks('2023-08-18')
view_log_last_N()
view_log_last_N(1)
search_log('20230818BARLON1')
runApp('pitch_tracker.R')
runApp('baycats_example_strikezone.R')
